//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Eraser.Plugins {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("Eraser.Plugins.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на (default).
        /// </summary>
        internal static string _default_ {
            get {
                return ResourceManager.GetString("(default)", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Could not load the plugin..
        /// </summary>
        internal static string Could_not_load_the_plugin_ {
            get {
                return ResourceManager.GetString("Could not load the plugin.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на EntropySource GUID not found: {0}.
        /// </summary>
        internal static string EntropySource_GUID_not_found___0_ {
            get {
                return ResourceManager.GetString("EntropySource GUID not found: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Erasure method not found: {0}.
        /// </summary>
        internal static string Erasure_method_not_found___0_ {
            get {
                return ResourceManager.GetString("Erasure method not found: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на PRNG not found: {0}.
        /// </summary>
        internal static string PRNG_not_found___0_ {
            get {
                return ResourceManager.GetString("PRNG not found: {0}", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The file system on the drive {0} is not supported..
        /// </summary>
        internal static string The_file_system_on_the_drive__0__is_not_supported_ {
            get {
                return ResourceManager.GetString("The file system on the drive {0} is not supported.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The provided Core plugin does not have an identical public key as the Eraser assembly.\n\nCheck that the Eraser installation is not corrupt, or reinstall the program..
        /// </summary>
        internal static string The_provided_Core_plugin_does_not_have_an_identical_public_key_as_the_Eraser_assembly__n_nCheck_that_the_Eraser_installation_is_not_corrupt__or_reinstall_the_program_ {
            get {
                return ResourceManager.GetString("The provided Core plugin does not have an identical public key as the Eraser asse" +
                        "mbly.\\n\\nCheck that the Eraser installation is not corrupt, or reinstall the pro" +
                        "gram.", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на The required Core plugin {0} could not be loaded. Repair the Eraser installation and try again..
        /// </summary>
        internal static string The_required_Core_plugin__0__could_not_be_loaded__Repair_the_Eraser_installation_and_try_again_ {
            get {
                return ResourceManager.GetString("The required Core plugin {0} could not be loaded. Repair the Eraser installation " +
                        "and try again.", resourceCulture);
            }
        }
    }
}
